#!/bin/bash
# cool stuff bucko
export PS1="Î» \w: "

export HISTSIZE=1000000
export HISEFILESIZE=1000000
# Avoid duplicates
HISTCONTROL=ignoredups:erasedups
# When the shell exits, append to the history file instead of overwriting it
shopt -s histappend

# After each command, append to the history file and reread it
PROMPT_COMMAND="${PROMPT_COMMAND:+$PROMPT_COMMAND$'\n'}history -a; history -c; history -r"

if [ -f "$HOME/.tokens" ]; then
  source $HOME/.tokens
fi

# julia
export JULIA_REVISE_INCLUDE=1
export JULIA_STACKTRACE_MINIMAL=true

export EDITOR=nvim

if command -v exa > /dev/null; then
   alias ls='exa'
fi
alias j='julialauncher'
alias jn='julialauncher +dev'
alias py='python3'
alias ipy='ipython'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
if command -v nvim > /dev/null; then
   alias vim='nvim'
   alias vi='nvim'
   alias v='nvim'
fi
alias gst='git status'
alias ga='git add'
alias gc='git commit'
alias md='mkdir -p'
alias gp='git push'
alias sudo2='sudo -E env "PATH=$PATH"'

export FZF_DEFAULT_OPTS='--height 80% --reverse --inline-info'
export FZF_DEFAULT_COMMAND="fd --type f --hidden --follow --exclude '{.git,.mypy_cache,node_modules,vendor}/'"

bind -x '"\C-p": nvim $(fzf);'

# INITIAL_QUERY=""
# RG_PREFIX="rg --column --line-number --no-heading --color=always --smart-case "
# # FZF_DEFAULT_COMMAND="$RG_PREFIX '$INITIAL_QUERY'" \
# bind -x '"\C-r": fzf --bind "change:reload:$RG_PREFIX {q} || true" \
#       --ansi --query "$INITIAL_QUERY" \
#       --height=50% --layout=reverse'

tm() {
 [[ -n "$TMUX" ]] && change="switch-client" || change="attach-session"
 if [ $1 ]; then
    tmux $change -t "$1" 2>/dev/null || (tmux new-session -d -s $1 && tmux $change -t "$1"); return
 fi
 session=$(tmux list-sessions -F "#{session_name}" 2>/dev/null | fzf --exit-0) &&  tmux $change -t "$session" || echo "No sessions found."
}

[ -f ~/.fzf.bash ] && source ~/.fzf.bash
eval "$(zoxide init bash)"

export PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/share/pkgconfig:$PKG_CONFIG_PATH

export GO111MODULE=on
export PATH="/usr/local/go/bin:$PATH"
export PATH="$HOME/go/bin:$PATH"

export PATH="$HOME/.deno/bin:$PATH"

if [ -e $HOME/.nix-profile/etc/profile.d/nix.sh ]; then . $HOME/.nix-profile/etc/profile.d/nix.sh; fi # added by Nix installer

# easy place to put manually downloaded binaries
export PATH="$HOME/bin:$PATH"

function gcob() {
   git branch | grep --invert-match '\*' | cut -c 3- |
      fzf --multi --preview="git log {}" |
      xargs --no-run-if-empty git checkout
}

# rust
. "$HOME/.cargo/env"

export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"
export PATH="/home/dom/anaconda3/bin:$PATH"

if command -v fzf-share >/dev/null; then
  source "$(fzf-share)/key-bindings.bash"
  source "$(fzf-share)/completion.bash"
fi

RG() {
  RG_PREFIX="rg --column --line-number --no-heading --color=always --smart-case "
  INITIAL_QUERY="$1"
  local selected=$(
    FZF_DEFAULT_COMMAND="$RG_PREFIX '$INITIAL_QUERY' || true" \
      fzf --bind "change:reload:$RG_PREFIX {q} || true" \
          --ansi --disabled --query "$INITIAL_QUERY" \
          --delimiter : \
          --preview 'bat --style=full --color=always --highlight-line {2} {1}' \
          --preview-window '~3:+{2}+3/2'
  )
  [ -n "$selected" ] && $EDITOR "$selected"
}

command -v bat  > /dev/null && export FZF_CTRL_T_OPTS="--preview 'bat -n --color=always {}'"

is_in_git_repo() {
  git rev-parse HEAD > /dev/null 2>&1
}

# >>> juliaup initialize >>>

# !! Contents within this block are managed by juliaup !!

case ":$PATH:" in *:/home/dom/.juliaup/bin:*);; *)
    export PATH=/home/dom/.juliaup/bin${PATH:+:${PATH}};;
esac

# <<< juliaup initialize <<<

# avm (Anchor)
export PATH="/home/dom/.avm/bin:$PATH"

export PATH="$PATH:/home/dom/.foundry/bin"

export FLYCTL_INSTALL="/home/dom/.fly"
export PATH="$FLYCTL_INSTALL/bin:$PATH"

BUN_INSTALL="/home/dom/.bun"
PATH="$BUN_INSTALL/bin:$PATH"

export PATH="$HOME/nvim-linux64/bin:$PATH"

eval "$(direnv hook bash)"

# Add $HOME/code/python-libs to PYTHONPATH
export PYTHONPATH="$HOME/code/python-libs:$PYTHONPATH"
