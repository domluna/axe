# General:
# C-a           Prefix
# C-a   r       Source .tmux.conf
# C-a   ?       Show key bindings
# C-a   t       Show time
#
# Sessions:
# C-a   s       List sessions
# C-a   $       Rename session
#
# Windows (tabs):
# C-a   c       Create window
# C-a   w       List windows
# C-a   f       Find window
# C-a   ,       Name window
# C-a   &       Kill window
#
# Panes (splits):
# C-a   |       Vertical split
# C-a   -       Horizontal split
# C-a   o       Jump between panes
# C-a   q       Show pane numbers (type number to jump)
# C-a   x       Kill pane
# C-a   !       Break pane out into a window
# C-a   j       Create pane from an existing window
# C-a   arrow   Move between panes
#
# C-a {       Swap the active pane with the pane above
# C-a }       Swap the active pane with the pane below

# remap prefix to Control + a
set -g prefix C-a
# bind 'C-a C-a' to type 'C-a'
bind C-a send-prefix
unbind C-b

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

set -g @continuum-restore 'on'
set -g @continuum-save-interval '10'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-processes '~julia'

set -g base-index 1
set-window-option -g pane-base-index 1
set -g renumber-windows on
set -g mouse on

# set scroll history to 100,000 lines
set-option -g history-limit 100000

set -g default-terminal "screen-256color"

if-shell '[[ $(uname -s) = Linux ]]' { 
  set-option -sa terminal-overrides ",xterm-kitty:RGB"
} { 
}

bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# cycle through panels with ^h and ^k
# bind-key -nr C-h select-pane -t :.-
# bind-key -nr C-k select-pane -t :.+
# bind-key -r > swap-window -d -t :+
# bind-key -r < swap-window -d -t :-

bind-key * set-window-option synchronize-pane

## Use vim keybindings in copy mode
set-option -g mouse on
setw -g mode-keys vi
set-option -s set-clipboard off
bind P paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X rectangle-toggle
unbind -T copy-mode-vi Enter

# if-shell '[[ $(uname -s) = Linux ]]' {
#   bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'xclip -se c -i'
#   bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'xclip -se c -i'
# } {
#   bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'pbcopy'
#   bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'pbcopy'
# }
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'xclip -se c -i'
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'xclip -se c -i'

bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# shortcut for moving tmux buffer to clipboard
# useful if you've selected with the mouse
bind-key -nr C-y run "tmux show-buffer | xsel -ib"

# Avoid ESC delay
set -s escape-time 0

# VIM mode
set -g mode-keys vi

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

bind -n C-h run "($is_vim && tmux send-keys C-h) || \
                 tmux select-pane -L"

bind -n C-j run "($is_vim && tmux send-keys C-j)  || \
                 ($is_fzf && tmux send-keys C-j) || \
                 tmux select-pane -D"

bind -n C-k run "($is_vim && tmux send-keys C-k) || \
                 ($is_fzf && tmux send-keys C-k)  || \
                 tmux select-pane -U"

bind -n C-l run "($is_vim && tmux send-keys C-l) || \
                 tmux select-pane -R"

bind-key -n 'C-\' if-shell "$is_vim" "send-keys 'C-\\'" "select-pane -l"


######################
### DESIGN CHANGES ###
######################

set -g status-position bottom
set -g status-bg colour234
set -g status-fg colour137
set -g status-left ''
set -g status-right '#[fg=colour233,bg=colour241,bold]'

setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

set-option -g set-titles on
set-option -g set-titles-string '#H:#S.#I.#P #W #T' # window number, program name, active(or not)

# -------------------------------------------------------------------
# fzf integration
# -------------------------------------------------------------------
# Tmux completion
# bind-key t run-shell 'tmux send-keys -t #{pane_id} "$(tmux-fzf-words)"'
# bind-key T run-shell 'tmux send-keys -t #{pane_id} "$(tmux-fzf-words --all)"'
#
# # Select pane
# bind-key 0 run-shell "tmux-fzf-panes || :"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
